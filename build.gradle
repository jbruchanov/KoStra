plugins {
    // this is necessary to avoid the plugins to be loaded multiple times
    // in each subproject's classloader
    alias(libs.plugins.jetbrains.multiplatform).apply(false)
    alias(libs.plugins.jetbrains.compose).apply(false)
    alias(libs.plugins.jetbrains.cocoapods).apply(false)
    alias(libs.plugins.jetbrains.jvm).apply(false)
    alias(libs.plugins.jetbrains.serialisation).apply(false)
    alias(libs.plugins.android.application).apply(false)
    alias(libs.plugins.android.library).apply(false)
    alias(libs.plugins.ktlint).apply(false)
    alias(libs.plugins.gradle.publish).apply(false)
    //can't be present here
    //alias(libs.plugins.gradle.plugin).apply(false)
}

subprojects {
    afterEvaluate {
        if (projectDir.name.startsWith("lib")) {
            tasks.jvmTest {
                useJUnitPlatform()
                testLogging {
                    showExceptions = true
                }
            }
        } else {
            test {
                useJUnitPlatform()
                testLogging {
                    showExceptions = true
                }
            }
        }
    }
}

def localProperties = new Properties().tap {
    load(new FileInputStream(file("local.properties")))
}

allprojects {
    ext.localProperties = localProperties
}
